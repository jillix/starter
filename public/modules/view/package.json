{
  "name": "view",
  "version": "0.1.0",
  "description": "Render HTML templates",
  "repository": {
    "type": "git",
    "url": "git://github.com/adioo/view.git"
  },
  "keywords": [
    "jxengine",
    "render"
  ],
  "author": {
    "name": "adioo"
  },
  "bugs": {
    "url": "https://github.com/adioo/view/issues"
  },
  "homepage": "https://github.com/adioo/view",
  "composition": {
    "client": {
      "module": [
        "view.js",
        "state.js"
      ]
    }
  },
  "gitHead": "293100c8dc1b22c1b3c6469db502171155f908a6",
  "readme": "# view\nA HTML renderer for jillix/engine.\n\n#### Client config example\n\n```json\n{\n    \"title\": \"Page title\",\n    \"template\": {\n        \"template_1\": {\n            \"to\": \"#selector\",\n            \"html\": \"/file_1.html\",\n            \"render\": true,\n            \"element\": \"customDataAttribute\"\n        },\n        \"template_2\": {\n            \"to\": \"#selector\",\n            \"html\": \"/file_2.html\",\n            \"render\": false,\n            \"element\": \"customDataAttribute\"\n        }\n    },\n    \"detaultTemplate\": \"template_2\",\n    \"states\": {\n        \"stateA\": [{\n            \"sel\": \"#new\",\n            \"element\": \"myElement\",\n            \"states\": [\"stateB\"],\n            \"rm\": [\"className\"],\n            \"add\": [\"className\"],\n            \"toggle\": [\"className\"]\n        }]\n    },\n    \"domEvents\": [\n        {\n            \"on\": \"click\",\n            \"selector\": \"#my_clickable_1\",\n            \"dontPrevent\": true,\n            \"flow\": \"event\"\n        }\n    ]\n}\n```\n\nDon't forget to load the HTML files in the module instance config:\n\n```json\n{\n    \"name\": \"my_view_module_instance\",\n    \"module\": \"view\",\n    \"client\": {\n        \"markup\": [\"/file.html\"]\n    }\n}\n```\n\n#### HTML data attribute\n\nThe `element` flow option searches for elements that have a `data-element` attribute with that value.\n\n```html\n<div data-element=\"myElement\"></div>\n```\n\n#### Public mehtods\n\n* `render` (render data to a template)\n* `state` (activate a state)\n\n# Implementing standard configurations\nThis section covers \"how to do\" general configurations.\n\n\n#### Navbars\n\nThe navbar will be an instance of the view module.\n\nPractical example:\nThe composition file of the navbar `nav_layout`:\n\n```json\n{\n  \"client\": {\n    \"config\": {\n      \"templates\": {\n        \"layout\": {\n          \"to\": \".one-container\",\n          \"html\": \"/nav.html\",\n          \"render\": true\n        }\n      },\n      \"defaultTemplate\": \"layout\",\n      \"states\": {\n        \"resetNav\": [{\n            \"sel\": \".navbar li\",\n            \"rm\": [\"active\"]\n          }],\n        \"nav\": [{\n            \"states\": [\"resetNav\"],\n            \"add\": [\"active\"]\n          }]\n      },\n      \"domEvents\": [{\n          \"on\": \"click\",\n          \"selector\": \"li\",\n          \"flow\": \"itemClick\"\n        }]\n    },\n    \"flow\": [\n      [\n        \"itemClick\",\n        [\":ALTR\", {\"data\": {\"url\": \"{event.target.href}\"}}],\n        \":public_router/route\"\n      ]\n    ],\n    \"markup\": [\n      \"/nav.html\"\n    ]\n  },\n  \"name\": \"nav_layout\",\n  \"module\": \"view\",\n  \"roles\": {\n    \"*\": true\n  }\n}\n```\nThe states are for adding the active class to the active `li`.\nThe 'domEvents' triggers the 'itemClick' event on item click.\nHtml navbar example `nav.html`:\n\n```html\n<ul class=\"navbar\">\n    <li><a href=\"faq\">FAQ</a></li>\n    <li><a href=\"features\">Features</a></li>\n    <li><a href=\"pricing\">Pricing</a></li>\n    <li><a href=\"signin\">Login</a></li>\n    <li><a href=\"signup\">Sign up</a></li>\n</ul>\n```\n\nTo use the navbar in a view module instance it must be loaded:\n```json\n{\n  \"client\": {\n    \"load\": [\n      \"nav_layout\",\n    ],\n    \"config\": {\n    },\n    \"markup\": [\n    ]\n  },\n  \"roles\": {\n    \"*\": true\n  },\n  \"module\": \"view\",\n  \"name\": \"public_layout\"\n}\n```\n\n#### Footer visibility on certain pages\nThe footer will be a module view instance\n\n```json\n{\n  \"client\": {\n    \"config\": {\n      \"templates\": {\n        \"layout\": {\n          \"to\": \"footer\",\n          \"html\": \"/any_footer.html\",\n          \"render\": true\n        }\n      },\n      \"defaultTemplate\": \"layout\",\n    },\n    \"markup\": [\n      \"/any_footer.html\"\n    ]\n  },\n  \"name\": \"footer_layout\",\n  \"module\": \"view\",\n  \"roles\": {\n    \"*\": true\n  }\n}\n```\nThe main html file which contains and empty footer:\n```html\n<div id=\"page-content\">\n    <div class=\"_container hide\"></div>\n</div>\n<footer></footer>\n\n```\nIn the main composition, for ex. `private_layout.json`, `footer_layout` can be loaded and states can be used to control the footer visibility:\n```\n{\n  \"client\": {\n    \"load\": [\n      \"footer_private_layout\"\n    ]\n    ......\n    \"states\": {\n        \"showFooter\": [{\n            \"sel\": \"footer\",\n            \"rm\": [\"hide\"]\n    }],\n        \"hideFooter\": [{\n            \"sel\": \"footer\",\n            \"add\": [\"hide\"]\n        }]\n}\n```\nIn a view module instance composition in which the footer must be shown or hidden, the following flow configuration can be used:\n```json\n    \"flow\": [\n      [\n        \"renderedDOM\",\n        [\":private_layout/state\", \"showFooter\"],\n      ]\n    ]\n```\nor\n```json\n    \"flow\": [\n      [\n        \"renderedDOM\",\n        [\":private_layout/state\", \"hideFooter\"],\n      ]\n    ]\n```\n\n#### Loader for loading pages\nFor page loader implementation the states can be used to control the loader visibility\n\nIn the main html file the loader must be present and `hide` must be the default class for the pages container:\n```html\n<div id=\"page-content\">\n    <div class=\"pages-container _container hide\">\n    </div>\n    <div class=\"page-loader\">Loader</div>\n</div>\n```\nIn the main composition, for ex. 'private_layout.json', states can be defined to control the loader visibility:\n```json\n{\n    \"showLoader\": [{\n        \"sel\": \".page-loader\",\n        \"rm\": [\"hide\"]\n    }],\n    \"hideLoader\": [{\n        \"sel\": \".page-loader\",\n        \"add\": [\"hide\"]\n    }],\n    \"showContainer\": [{\n        \"sel\": \"._container\",\n        \"rm\": [\"hide\"]\n    }],\n    \"hideContainer\": [{\n        \"sel\": \"._container\",\n        \"add\": [\"hide\"]\n    }],\n    \"displayLoader\": [{\n        \"states\": [\n            \"showLoader\",\n            \"hideContainer\"\n            ]\n    }],\n    \"displayContainer\": [{\n        \"states\": [\n            \"showContainer\",\n            \"hideLoader\"\n            ]\n    }]\n}\n```\nIn the compositions in which the loader is needed, the flow configuration can be used to manipulate the loader state:\n```json\n\"flow\": [\n    [\n        \"renderedDOM\",\n        [\":private_layout/state\", \"displayContainer\"]\n    ]\n]\n```\nIn special cases (ex. service builder, service file editor) the `renderedDOM` event will not be the right event to be used for manipulating the loader states and thus a custom event will be needed.\n```json\n\"flow\": [\n    [\n        \"renderedGraph\",\n        [\":private_layout/state\", \"displayContainer\"]\n    ]\n]\n```\n#### Pages inside a certain container\nIf a section which contains multiple pages must be added to `container` class, states can be used to show/hide pages\n```html\n<div class=\"pages-container container hide\"></div>\n```\nA section added to `container` can be similar to the following:\n```html\n<div class=\"app-options\">\n    <div class=\"app-dashboard hide\"></div>\n    <div class=\"app-editor hide\"></div>\n    <div class=\"app-terminal hide\"></div>\n</div>\n```\nA view module instance composition file `app_options_layout.json` can be used for the section configuration.\nThe `app_dashboard`, `app_editor`, `app_terminal` events from the flow configuration come from an engine-ruut module instance.\n```json\n\"states\": {\n    \"hide-all\": [{\n        \"sel\": \".app-options > div\",\n        \"add\": [\"hide\"]\n    }],\n    \"app_dashboard\": [{\n        \"sel\": \".app-options > .app-dashboard\",\n        \"rm\": [\"hide\"]\n    }],\n    \"app_editor\": [{\n        \"sel\": \".app-options > .app-editor\",\n        \"rm\": [\"hide\"]\n    }],\n    \"app_terminal\": [{\n        \"sel\": \".app-options > .app-terminal\",\n        \"rm\": [\"hide\"]\n    }]\n    }\n```\n```json\n\"flow\": [\n    [\n        \"renderedDOM\",\n        [\"LOAD\", [\"nav_app_layout\"]]\n    ],\n    [\n        \"app_dashboard\",\n        [\"LOAD\", [\"app_dashboard_layout\"]],\n        [\":state\", \"hide-all\"],\n        [\":state\", \"app_dashboard\"],\n    ],\n    [\n        \"app_editor\",\n        [\"LOAD\", [\"app_editor_layout\"]],\n        [\":state\", \"hide-all\"],\n        [\":state\", \"app_editor\"]\n    ],\n    [\n        \"app_terminal\",\n        [\"LOAD\", [\"app_terminal_layout\"]],\n        [\":state\", \"hide-all\"],\n        [\":state\", \"app_terminal\"],\n    ]\n]\n```\n",
  "readmeFilename": "README.md",
  "_id": "view@0.1.0",
  "_shasum": "21b0728e9150d5f9636f2c46177c0fcf5080a8c2",
  "_from": "adioo/view",
  "_resolved": "git://github.com/adioo/view.git#293100c8dc1b22c1b3c6469db502171155f908a6"
}
